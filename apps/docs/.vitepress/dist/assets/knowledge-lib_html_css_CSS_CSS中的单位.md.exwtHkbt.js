import{a2 as o,t,ao as a,q as l}from"./chunks/framework.tQiMsDJj.js";const h=JSON.parse('{"title":"CSS中的单位","description":"","frontmatter":{},"headers":[],"relativePath":"knowledge-lib/html&css/CSS/CSS中的单位.md","filePath":"knowledge-lib/html&css/CSS/CSS中的单位.md"}'),r={name:"knowledge-lib/html&css/CSS/CSS中的单位.md"};function s(c,e,i,n,d,m){return l(),t("div",null,e[0]||(e[0]=[a('<h1 id="css中的单位" tabindex="-1">CSS中的单位 <a class="header-anchor" href="#css中的单位" aria-label="Permalink to &quot;CSS中的单位&quot;">​</a></h1><blockquote><p>可以分为绝对和相对两大类</p></blockquote><h2 id="绝对单位" tabindex="-1">绝对单位 <a class="header-anchor" href="#绝对单位" aria-label="Permalink to &quot;绝对单位&quot;">​</a></h2><blockquote><p>px\\cm\\mm\\in英寸\\pt点 这些值大多数在用于打印时比用于屏幕输出时更有用</p></blockquote><p>唯一常用的值是px，它是一个固定大小的单元，像素的计算是针对（电脑/手机）屏幕的，一个像素（1px）就是（电脑/手机）屏幕上的一个点，即屏幕分辨率的最小分割</p><h2 id="相对长度单位" tabindex="-1">相对长度单位 <a class="header-anchor" href="#相对长度单位" aria-label="Permalink to &quot;相对长度单位&quot;">​</a></h2><ul><li><code>em</code>：<strong>em是相对于父级元素的单位，会随父级元素的属性（font-size或其它属性）变化而变化</strong>.</li><li><code>rem</code>：<strong>rem是相对于根目录（HTML元素）的，所有它会随HTML元素的属性（font-size）变化而变化</strong></li><li><code>vw</code> \\ <code>vh</code>：相对于视口的宽度和高度</li><li><code>vmin</code>`vmax`： 相对于视口宽高中的的最小值和最大值</li></ul>',7)]))}const p=o(r,[["render",s]]);export{h as __pageData,p as default};
