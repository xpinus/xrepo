import{a2 as i,t as e,aq as s,q as t}from"./chunks/framework.jAttmLhR.js";const k=JSON.parse('{"title":"WebAPI","description":"","frontmatter":{},"headers":[],"relativePath":"knowledge-lib/browser/WebAPI/index.md","filePath":"knowledge-lib/browser/WebAPI/index.md"}'),o={name:"knowledge-lib/browser/WebAPI/index.md"};function n(p,a,r,l,h,d){return t(),e("div",null,a[0]||(a[0]=[s(`<h1 id="webapi" tabindex="-1">WebAPI <a class="header-anchor" href="#webapi" aria-label="Permalink to &quot;WebAPI&quot;">​</a></h1><h2 id="几个很实用的bom属性对象方法" tabindex="-1">几个很实用的BOM属性对象方法 <a class="header-anchor" href="#几个很实用的bom属性对象方法" aria-label="Permalink to &quot;几个很实用的BOM属性对象方法&quot;">​</a></h2><p><strong>location对象</strong></p><p><code>location.href</code>-- 返回或设置当前文档的URL</p><p><code>location.search</code> -- 返回URL中的查询字符串部分。</p><p><code>location.hash</code> -- 返回URL#后面的内容，如果没有#，返回空</p><p><code>location.host</code> -- 返回URL中的域名部分，例如www.dreamdu.com</p><p><code>location.hostname</code> -- 返回URL中的主域名部分，例如dreamdu.com</p><p><code>location.pathname</code> -- 返回URL的域名后的部分。例如 <a href="http://www.dreamdu.com/xhtml/" target="_blank" rel="noreferrer">http://www.dreamdu.com/xhtml/</a> 返回/xhtml/</p><p><code>location.port</code> -- 返回URL中的端口部分。例如 <a href="http://www.dreamdu.com:8080/xhtml/" target="_blank" rel="noreferrer">http://www.dreamdu.com:8080/xhtml/</a> 返回8080</p><p><code>location.protocol</code> -- 返回URL中的协议部分。例如 <a href="http://www.dreamdu.com:8080/xhtml/" target="_blank" rel="noreferrer">http://www.dreamdu.com:8080/xhtml/</a> 返回(//)前面的内容http:</p><p><code>location.assign</code> -- 设置当前文档的URL</p><p><code>location.replace()</code> -- 设置当前文档的URL，并且在history对象的地址列表中移除这个URL location.replace(url);</p><p><code>location.reload()</code> -- 重载当前页面</p><p><strong>history对象</strong></p><p><code>history.go()</code> -- 前进或后退指定的页面数 history.go(num);</p><p><code>history.back()</code> -- 后退一页</p><p><code>history.forward()</code> -- 前进一页</p><p><strong>navigator对象</strong></p><p><code>navigator.userAgent</code> -- 返回用户代理头的字符串表示(就是包括浏览器版本信息等的字符串)</p><p><code>navigator.cookieEnabled</code> -- 返回浏览器是否支持(启用)cookie</p><p><strong>window对象</strong></p><p><code>window.resize()</code></p><h2 id="geolocation-api" tabindex="-1">Geolocation API <a class="header-anchor" href="#geolocation-api" aria-label="Permalink to &quot;Geolocation API&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getLocation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(navigator.geolocation) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        navigator.geolocation.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getCurrentPosition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">position</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">err</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    } </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="页面可见性" tabindex="-1">页面可见性 <a class="header-anchor" href="#页面可见性" aria-label="Permalink to &quot;页面可见性&quot;">​</a></h2><p>document.hidden boolean 用户当前是否正在观看该页面</p><p>document.visibilityState visible hidden</p><p><code>visibilitychange事件</code></p><h2 id="web-animation-api" tabindex="-1">Web Animation API <a class="header-anchor" href="#web-animation-api" aria-label="Permalink to &quot;Web Animation API&quot;">​</a></h2><p>浏览器提供的原生js动画方案</p><p><a href="https://www.bilibili.com/video/BV15E4m1R7tq/?spm_id_from=333.1387.0.0&amp;vd_source=13577946ef3878abe2197cc65b72005c" target="_blank" rel="noreferrer">https://www.bilibili.com/video/BV15E4m1R7tq/?spm_id_from=333.1387.0.0&amp;vd_source=13577946ef3878abe2197cc65b72005c</a></p>`,32)]))}const g=i(o,[["render",n]]);export{k as __pageData,g as default};
