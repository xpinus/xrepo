import{a2 as i,t as s,aq as e,q as l}from"./chunks/framework.jAttmLhR.js";const E=JSON.parse('{"title":"1期目标","description":"","frontmatter":{},"headers":[],"relativePath":"knowledge-lib/blogs/项目创建初期的问题.md","filePath":"knowledge-lib/blogs/项目创建初期的问题.md"}'),t={name:"knowledge-lib/blogs/项目创建初期的问题.md"};function n(r,a,p,h,o,d){return l(),s("div",null,a[0]||(a[0]=[e(`<h1 id="_1期目标" tabindex="-1">1期目标 <a class="header-anchor" href="#_1期目标" aria-label="Permalink to &quot;1期目标&quot;">​</a></h1><ul><li></li></ul><h2 id="editorconfig" tabindex="-1">EditorConfig <a class="header-anchor" href="#editorconfig" aria-label="Permalink to &quot;EditorConfig&quot;">​</a></h2><p><a href="https://mp.weixin.qq.com/s/BX1AAlUDekAPR2pxM9wBeA" target="_blank" rel="noreferrer">https://mp.weixin.qq.com/s/BX1AAlUDekAPR2pxM9wBeA</a></p><p>rollup 打包</p><p>yarn add rollup rollup-plugin-babel @babel/core @babel/preset-env @babel/preset-react -D</p><p>.gitignore 屏蔽不进行版本管理的文件、文件夹</p><p>.yarnignore 用yarn发布时屏蔽的文件、文件夹</p><p>.pretterrc.js</p><p>rollup.config.js</p><p>babel.config.js</p><p>yarn run rollup --config --watch</p><p>yarn run rollup --config</p><p>yarn link</p><p>进入测试项目</p><p>yarn link react-json-tools-library</p><h2 id="babel" tabindex="-1">Babel <a class="header-anchor" href="#babel" aria-label="Permalink to &quot;Babel&quot;">​</a></h2><p>js编译器，用于将最新的语法编译成兼容版本呢</p><ul><li><p>转换语法</p></li><li><p>Polyfill 目标环境中缺少的功能 <a href="https://zhuanlan.zhihu.com/p/71640183" target="_blank" rel="noreferrer">https://zhuanlan.zhihu.com/p/71640183</a></p></li><li><p>源代码转换(codemods)</p></li><li><p>等</p></li></ul><h2 id="antd" tabindex="-1">antd <a class="header-anchor" href="#antd" aria-label="Permalink to &quot;antd&quot;">​</a></h2><p>css样式要在index.css第一行引入？</p><p>import &#39;antd/.../ant.min.css&#39;</p><p>index.module.scss引入的style才有效？不知道antd pro是怎么做的</p><h2 id="" tabindex="-1">@ <a class="header-anchor" href="#" aria-label="Permalink to &quot;@&quot;">​</a></h2><p>再creat-react-app之后</p><p>yarn eject</p><p>config &gt; webpack.config.js &gt; alias &gt; &#39;@&#39;:paths.appSrc</p><h2 id="mysql" tabindex="-1">mySql <a class="header-anchor" href="#mysql" aria-label="Permalink to &quot;mySql&quot;">​</a></h2><h4 id="删除重装" tabindex="-1">删除重装 <a class="header-anchor" href="#删除重装" aria-label="Permalink to &quot;删除重装&quot;">​</a></h4><p><a href="https://blog.csdn.net/wqy18210176544/article/details/77235203" target="_blank" rel="noreferrer">https://blog.csdn.net/wqy18210176544/article/details/77235203</a></p><p><a href="https://blog.csdn.net/qq_43358160/article/details/116862012" target="_blank" rel="noreferrer">https://blog.csdn.net/qq_43358160/article/details/116862012</a></p><h4 id="创建数据库" tabindex="-1">创建数据库 <a class="header-anchor" href="#创建数据库" aria-label="Permalink to &quot;创建数据库&quot;">​</a></h4><ul><li><p>链接 mysql -u root -p</p></li><li><p>创建 create DATABASE dbname</p></li><li><p>创建 CREATE DATABASE blog_db; (注意分号必不可少)</p></li><li><p>查看 SHOW DATABASES;</p></li><li><p>退出 exit</p></li></ul><h4 id="连接查看" tabindex="-1">连接查看 <a class="header-anchor" href="#连接查看" aria-label="Permalink to &quot;连接查看&quot;">​</a></h4><p>软件 DBeaver</p><ul><li>选择mysql数据库</li><li>输入地址、端口号、数据库名、用户名、密码 (password: 970716)</li><li>注意数据库的字符集，选择utf8</li></ul><h4 id="数据库设计" tabindex="-1">数据库设计 <a class="header-anchor" href="#数据库设计" aria-label="Permalink to &quot;数据库设计&quot;">​</a></h4><p><a href="https://wjrsbu.smartapps.cn/zhihu/article?id=389186555&amp;isShared=1&amp;uid_f=1294925793739231232&amp;_swebfr=1&amp;_swebFromHost=baiduboxapp" target="_blank" rel="noreferrer">https://wjrsbu.smartapps.cn/zhihu/article?id=389186555&amp;isShared=1&amp;uid_f=1294925793739231232&amp;_swebfr=1&amp;_swebFromHost=baiduboxapp</a></p><ul><li><p>使用PDManer设计表</p></li><li><p>复制数据库代码在DBeaver的SQL脚本中执行，即可创建对应数据库表</p></li><li><p>添加新的列</p></li><li><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ALTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> article </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ADD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> COLUMN (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    content_md </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">TEXT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    COMMENT </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;文章内容md&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    content_html </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">TEXT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    COMMENT </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;文章内容html&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div></li><li><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ALTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> article</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MODIFY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> title </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">varchar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">255</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NOT null</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> UNIQUE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> COMMENT </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;标题&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div></li><li></li></ul><h4 id="sequelize" tabindex="-1">sequelize <a class="header-anchor" href="#sequelize" aria-label="Permalink to &quot;sequelize&quot;">​</a></h4><p><a href="https://www.sequelize.com.cn/" target="_blank" rel="noreferrer">https://www.sequelize.com.cn/</a></p><ul><li><p>yarn add egg-sequelize // sequelize</p><ul><li><a href="https://www.jianshu.com/p/2f78b1c88c51" target="_blank" rel="noreferrer">https://www.jianshu.com/p/2f78b1c88c51</a> egg配置</li></ul></li><li><p>yarn add mysql2</p><ul><li><a href="https://www.bookstack.cn/read/egg-plugins-docs-cn/egg-sequelize.md" target="_blank" rel="noreferrer">https://www.bookstack.cn/read/egg-plugins-docs-cn/egg-sequelize.md</a></li></ul></li><li><p>yarn add sequelize-automate // 自动生成models</p><ul><li><a href="https://github.com/nodejh/sequelize-automate" target="_blank" rel="noreferrer">https://github.com/nodejh/sequelize-automate</a></li></ul></li><li><p>ctx.model.Article // 模型首字母大写</p></li><li><p>自动生成的model，option中添加 ”timestamps: false“，禁用时间戳</p></li></ul><h2 id="egg" tabindex="-1">EGG <a class="header-anchor" href="#egg" aria-label="Permalink to &quot;EGG&quot;">​</a></h2><h4 id="controller中-html各种参数获取" tabindex="-1">controller中： html各种参数获取 <a class="header-anchor" href="#controller中-html各种参数获取" aria-label="Permalink to &quot;controller中： html各种参数获取&quot;">​</a></h4><ul><li>ctx.query url参数</li><li>ctx.params url变量</li><li>ctx.request.body body参数</li></ul><p>egg-validate 参数校验插件，别忘了在plugin.js中开启配置</p><h4 id="csrf" tabindex="-1">csrf <a class="header-anchor" href="#csrf" aria-label="Permalink to &quot;csrf&quot;">​</a></h4><p>egg开启了csrf安全验证，在login之前，get请求获取ctx.csrf保存在localStorage里面，在每次post请求时</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">headers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	&#39;x-csrf-token&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: window.localStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;x-csrf-token&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span></code></pre></div><h4 id="antd-pro" tabindex="-1">antd pro <a class="header-anchor" href="#antd-pro" aria-label="Permalink to &quot;antd pro&quot;">​</a></h4><p>mock <a href="https://www.jianshu.com/p/15c020ceb660" target="_blank" rel="noreferrer">https://www.jianshu.com/p/15c020ceb660</a></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> antd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pro</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 支持sass</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @umijs/plugin-sass</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> node-sass</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass-loader</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config.js</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> default {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	sass:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">{}</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="md显示编辑" tabindex="-1">md显示编辑 <a class="header-anchor" href="#md显示编辑" aria-label="Permalink to &quot;md显示编辑&quot;">​</a></h2><ul><li>react-markdown-editor-lite</li><li>markdow-it</li><li></li></ul><h2 id="使用gitee创建临时的图床" tabindex="-1">使用Gitee创建临时的图床 <a class="header-anchor" href="#使用gitee创建临时的图床" aria-label="Permalink to &quot;使用Gitee创建临时的图床&quot;">​</a></h2><p><a href="https://cloud.tencent.com/developer/article/1930828#:~:text=%E5%9C%A8%20Gitee%2FGitHub%20%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93%EF%BC%8C%E7%94%A8%E6%9D%A5%E5%AD%98%E6%94%BE%E4%BD%A0%E7%9A%84%E5%9B%BE%E7%89%87%E3%80%82%20%E9%A6%96%E5%85%88%E6%89%93%E5%BC%80%E4%BD%A0%E7%9A%84%20Gitee%20%E4%B8%BB%E9%A1%B5%EF%BC%8C%E7%82%B9%E5%87%BB%20%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93%20%EF%BC%8C%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E4%BB%93%E5%BA%93%E3%80%82,%E5%A1%AB%E5%86%99%E6%8F%8F%E8%BF%B0%EF%BC%8C%E7%84%B6%E5%90%8E%E6%8F%90%E4%BA%A4%EF%BC%8C%E8%BE%93%E5%85%A5%E4%BD%A0%E7%9A%84%20Gitee%20%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81%E5%8D%B3%E5%8F%AF%EF%BC%8C%20Token%20%E5%85%B3%E9%97%AD%E9%A1%B5%E9%9D%A2%E5%90%8E%E5%B0%86%E4%B8%8D%E5%86%8D%E6%98%BE%E7%A4%BA%EF%BC%8C%E5%9B%A0%E6%AD%A4%E9%9C%80%E8%A6%81%E8%AE%B0%E5%BD%95%20Token%E3%80%82%20%E8%87%B3%E6%AD%A4%EF%BC%8CGitee%20%E7%9A%84%E9%85%8D%E7%BD%AE%E5%B7%B2%E7%BB%8F%E5%AE%8C%E6%88%90%E3%80%82" target="_blank" rel="noreferrer">https://cloud.tencent.com/developer/article/1930828#:~:text=在 Gitee%2FGitHub 创建一个图床仓库，用来存放你的图片。 首先打开你的 Gitee 主页，点击 新建仓库 ，创建一个仓库。,填写描述，然后提交，输入你的 Gitee 账号密码即可， Token 关闭页面后将不再显示，因此需要记录 Token。 至此，Gitee 的配置已经完成。</a></p><h2 id="filereader" tabindex="-1">FileReader <a class="header-anchor" href="#filereader" aria-label="Permalink to &quot;FileReader&quot;">​</a></h2><p>实现读取本地文件</p><p><a href="https://blog.csdn.net/xianweizuo/article/details/88911364" target="_blank" rel="noreferrer">https://blog.csdn.net/xianweizuo/article/details/88911364</a></p>`,59)]))}const c=i(t,[["render",n]]);export{E as __pageData,c as default};
