import{a2 as e,t as l,aq as a,q as i}from"./chunks/framework.jAttmLhR.js";const h=JSON.parse('{"title":"CSS属性值的计算过程","description":"","frontmatter":{},"headers":[],"relativePath":"knowledge-lib/html&css/CSS/CSS属性值计算过程.md","filePath":"knowledge-lib/html&css/CSS/CSS属性值计算过程.md"}'),o={name:"knowledge-lib/html&css/CSS/CSS属性值计算过程.md"};function s(c,t,r,n,d,S){return i(),l("div",null,t[0]||(t[0]=[a('<h1 id="css属性值的计算过程" tabindex="-1">CSS属性值的计算过程 <a class="header-anchor" href="#css属性值的计算过程" aria-label="Permalink to &quot;CSS属性值的计算过程&quot;">​</a></h1><blockquote><p>请简述css中属性值的计算过程是怎样的</p></blockquote><ol><li>确定声明值 在样式表中写样式声明时（作者样式），这个声明就会被当作css的属性值。当作者样式和默认声明值冲突时，会优先把作者样式中的声明值当作属性值。</li><li>层叠冲突 使用层叠规则来确定css的属性值</li><li>使用继承 如果没有声明属性会先去看有无可继承属性</li><li>使用默认值</li></ol><h2 id="层叠继承规则" tabindex="-1">层叠继承规则 <a class="header-anchor" href="#层叠继承规则" aria-label="Permalink to &quot;层叠继承规则&quot;">​</a></h2><ul><li><code>！important &gt; style(1000) &gt; id(## | 100) &gt; class、伪类( . | 10) &gt; tag(标签 | 1) &gt; *(通配符)</code></li><li>同样的权重，就近</li><li>内联样式 &gt; 内部样式 &gt; 外部样式</li><li><code>!important</code> &gt; 内联样式</li></ul>',5)]))}const p=e(o,[["render",s]]);export{h as __pageData,p as default};
