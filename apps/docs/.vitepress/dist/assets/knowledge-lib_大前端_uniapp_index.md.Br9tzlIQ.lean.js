import{a2 as a,t as p,ao as t,q as n}from"./chunks/framework.tQiMsDJj.js";const f=JSON.parse('{"title":"uni-app","description":"","frontmatter":{},"headers":[],"relativePath":"knowledge-lib/大前端/uniapp/index.md","filePath":"knowledge-lib/大前端/uniapp/index.md"}'),r={name:"knowledge-lib/大前端/uniapp/index.md"};function l(i,e,o,u,d,c){return n(),p("div",null,e[0]||(e[0]=[t('<h1 id="uni-app" tabindex="-1"><a href="https://uniapp.dcloud.net.cn/tutorial/" target="_blank" rel="noreferrer">uni-app</a> <a class="header-anchor" href="#uni-app" aria-label="Permalink to &quot;[uni-app](https://uniapp.dcloud.net.cn/tutorial/)&quot;">​</a></h1><ul><li><p>页面文件遵循<a href="https://vue-loader.vuejs.org/zh/spec.html" target="_blank" rel="noreferrer">Vue单文件组件 (SFC)</a> 规范，即每个页面是一个.vue文件</p></li><li><p>组件标签靠近小程序规范，详见<a href="https://uniapp.dcloud.net.cn/component/" target="_blank" rel="noreferrer">uni-app 组件规范</a></p></li><li><p>接口能力（JS API）靠近小程序规范，但需将前缀 wx、my 等替换为 uni，详见<a href="https://uniapp.dcloud.net.cn/api/" target="_blank" rel="noreferrer">uni-app接口规范</a></p></li><li><p>数据绑定及事件处理同 Vue.js 规范，同时补充了<a href="https://uniapp.dcloud.net.cn/collocation/App.html#applifecycle" target="_blank" rel="noreferrer">应用生命周期</a>及<a href="https://uniapp.dcloud.net.cn/tutorial/page.html#lifecycle" target="_blank" rel="noreferrer">页面的生命周期</a></p></li><li><p>如需兼容app-nvue平台，建议使用flex布局进行开发</p></li><li><p>uni-app分<code>编译器</code>和<code>运行时（runtime）</code>。uni-app能实现一套代码、多端运行，是通过这2部分配合完成的。</p><ul><li><code>编译器</code>将开发者的代码进行编译，编译的输出物由各个终端的<code>runtime</code>进行解析</li><li>每个平台（Web、Android App、iOS App、各家小程序）都有各自的<code>runtime</code></li></ul></li></ul>',2)]))}const h=a(r,[["render",l]]);export{f as __pageData,h as default};
