import{a2 as s,t as i,aq as a,q as d}from"./chunks/framework.jAttmLhR.js";const E=JSON.parse('{"title":"audio","description":"","frontmatter":{},"headers":[],"relativePath":"knowledge-lib/html&css/HTML/audio/index.md","filePath":"knowledge-lib/html&css/HTML/audio/index.md"}'),h={name:"knowledge-lib/html&css/HTML/audio/index.md"};function n(l,t,e,p,k,r){return d(),i("div",null,t[0]||(t[0]=[a(`<h1 id="audio" tabindex="-1">audio <a class="header-anchor" href="#audio" aria-label="Permalink to &quot;audio&quot;">​</a></h1><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">audio</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> controls</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;controls&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">source</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./test.mp4&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;audio/mpeg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">source</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./test.ogg&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;audio/ogg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  您的浏览器不支持 audio 标签</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">audio</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><table tabindex="0"><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>src</td><td>要播放的音频的 URL</td></tr><tr><td>controls</td><td>如果设置该属性，则向用户显示控件，例如播放按钮</td></tr><tr><td>autoplay</td><td>如果设置该属性，则音频在就绪后马上播放</td></tr><tr><td>loop</td><td>如果设置该属性，则每当音频结束时重新开始播放</td></tr><tr><td>muted</td><td>规定音频输出应该被静音</td></tr><tr><td>preload</td><td>如果设置该属性，则音频在页面加载时进行加载，并预备播放</td></tr></tbody></table><table tabindex="0"><thead><tr><th>音频格式</th><th>MIME类型</th></tr></thead><tbody><tr><td>MP3</td><td>audio/mpeg</td></tr><tr><td>Ogg</td><td>audio/ogg</td></tr><tr><td>Wav</td><td>audio/wav</td></tr></tbody></table>`,4)]))}const g=s(h,[["render",n]]);export{E as __pageData,g as default};
