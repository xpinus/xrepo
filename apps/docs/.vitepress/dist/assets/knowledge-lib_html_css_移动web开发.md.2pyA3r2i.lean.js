import{a2 as i,t,ao as a,q as e}from"./chunks/framework.tQiMsDJj.js";const c=JSON.parse('{"title":"移动web开发","description":"","frontmatter":{},"headers":[],"relativePath":"knowledge-lib/html&css/移动web开发.md","filePath":"knowledge-lib/html&css/移动web开发.md"}'),l={name:"knowledge-lib/html&css/移动web开发.md"};function n(h,s,p,k,r,d){return e(),t("div",null,s[0]||(s[0]=[a(`<h1 id="移动web开发" tabindex="-1">移动web开发 <a class="header-anchor" href="#移动web开发" aria-label="Permalink to &quot;移动web开发&quot;">​</a></h1><h2 id="知道-pwa-吗" tabindex="-1">知道 PWA 吗 <a class="header-anchor" href="#知道-pwa-吗" aria-label="Permalink to &quot;知道 PWA 吗&quot;">​</a></h2><p>PWA 全称 Progressive Web App，即渐进式 WEB 应用。一个 PWA 应用首先是一 个网页,可以通过 Web 技术编写出一个网页应用. 随后添加上 App Manifest 和 Service Worker 来实现 PWA 的安装和离线等功能</p><h2 id="移动布局方案方案" tabindex="-1">移动布局方案方案 <a class="header-anchor" href="#移动布局方案方案" aria-label="Permalink to &quot;移动布局方案方案&quot;">​</a></h2><ul><li>根据端来开发不同页面</li><li>根据不同端加载不同css</li><li>根据响应式，来运行不同的规则样式</li></ul><p>考虑问题：</p><ol><li>设置视窗</li></ol><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;viewport&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;width=device-width, initial-scale=1.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><ol start="2"><li>掌握媒体查询</li></ol><table tabindex="0"><thead><tr><th style="text-align:center;">断点</th><th style="text-align:center;">类中缀</th><th style="text-align:center;">分辨率</th></tr></thead><tbody><tr><td style="text-align:center;">X-Small</td><td style="text-align:center;">None</td><td style="text-align:center;">&lt;576px</td></tr><tr><td style="text-align:center;">Small</td><td style="text-align:center;">sm</td><td style="text-align:center;">≥576px</td></tr><tr><td style="text-align:center;">Medium</td><td style="text-align:center;">md</td><td style="text-align:center;">≥768px</td></tr><tr><td style="text-align:center;">Large</td><td style="text-align:center;">lg</td><td style="text-align:center;">≥992px</td></tr><tr><td style="text-align:center;">Extra large</td><td style="text-align:center;">xl</td><td style="text-align:center;">≥1200px</td></tr><tr><td style="text-align:center;">Extra extra large</td><td style="text-align:center;">xxl</td><td style="text-align:center;">≥1400px</td></tr></tbody></table><p>rem</p><p><a href="https://juejin.cn/post/6953091677838344199#heading-1" target="_blank" rel="noreferrer">参考</a></p><p>react实践：<a href="https://juejin.cn/post/7082386729277718565" target="_blank" rel="noreferrer">https://juejin.cn/post/7082386729277718565</a></p><blockquote><p>栅格系统</p></blockquote><p><a href="https://juejin.cn/post/6953091677838344199#heading-1" target="_blank" rel="noreferrer">参考</a></p><blockquote><p>大屏适配</p></blockquote><p><a href="https://juejin.cn/post/6972416642600927246" target="_blank" rel="noreferrer">https://juejin.cn/post/6972416642600927246</a></p><h2 id="移动端适配-1px-的问题" tabindex="-1">移动端适配 1px 的问题 <a class="header-anchor" href="#移动端适配-1px-的问题" aria-label="Permalink to &quot;移动端适配 1px 的问题&quot;">​</a></h2><blockquote><p>原因：</p></blockquote><p>首先，我们了解 devicePixelRatio（DPR）这个东西 在 window 对象中有一个 devicePixelRatio 属性，他可以反应 css 中的像素与设备的 像素比。然而 1px 在不同的移动设备上都等于这个移动设备的 1px，这是因为不同的 移动设备有不同的像素密度。有关这个属性，它的官方的定义为：设备物理像素和设 备独立像素的比例，也就是 devicePixelRatio = 物理像素 / 独立像素 1px 变粗的原 因：viewport 的设置和屏幕物理分辨率是按比例而不是相同的. 移动端 window 对象 有个 devicePixelRatio 属性,它表示设备物理像素和 css 像素的比例,在 retina 屏的 iphone 手机上, 这个值为 2 或 3,css 里写的 1px 长度映射到物理像素上就有 2px 或 3px 那么长</p><blockquote><p>解决方案</p></blockquote><ul><li>用小数来写 px 值 + 媒体查询</li></ul><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.border</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">border</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> solid</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> #999</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@media</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> screen</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> and</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-webkit-min-device-pixel-ratio</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) { </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    .border</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">border</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> solid</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> #999</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@media</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> screen</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> and</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-webkit-min-device-pixel-ratio</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) { </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    .border</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">border</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.333333</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> solid</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> #999</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li>伪元素实现边框 + transform缩放 + 媒体查询</li></ul><h2 id="移动端兼容性" tabindex="-1">移动端兼容性 <a class="header-anchor" href="#移动端兼容性" aria-label="Permalink to &quot;移动端兼容性&quot;">​</a></h2><h3 id="touch和click事件的冲突" tabindex="-1">touch和click事件的冲突 <a class="header-anchor" href="#touch和click事件的冲突" aria-label="Permalink to &quot;touch和click事件的冲突&quot;">​</a></h3><blockquote><p>移动设备上的浏览器将会在 click 事件触发时延迟 300ms ，以确保这是一个“单击”事件而非“双击”事件。而对于 touchstart 事件而言，则会在用户手指触碰屏幕的一瞬间触发所绑定的事件。</p></blockquote><p>当一个元素被同时绑定touchstart和click事件时，在移动端会被依次触发两次</p><p>解决方法：</p><ol><li>在touchstart中添加preventDefault, 虽然click不是默认事件，但浏览器实现了这种方式</li><li>惰性函数，动态判断应该使用哪种方法绑定点击事件</li></ol><h2 id="ios移动端问题" tabindex="-1">ios移动端问题 <a class="header-anchor" href="#ios移动端问题" aria-label="Permalink to &quot;ios移动端问题&quot;">​</a></h2><blockquote><p>设置z-index不生效问题</p></blockquote><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.sider</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    -webkit-transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">translateZ</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  	-moz-transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">translateZ</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    -o-transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">translateZ</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">translateZ</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    z-index</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">999</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span></code></pre></div><blockquote><p>touchstart selection问题</p></blockquote><blockquote><p>固定定位布局键盘挡住输入框内容</p></blockquote><p>500ms定时器轮询<code>document,activeElement</code>，如果触发input就改为static定位，这样浏览器就会把内容顶上去</p><blockquote><p>底部Input被弹出的键盘遮挡</p></blockquote><p>利用scrollIntoView让元素滚动到可视区域</p><blockquote><p>click的300ms延迟和点击穿透</p></blockquote><p><a href="https://www.jianshu.com/p/6e2b68a93c88" target="_blank" rel="noreferrer">https://www.jianshu.com/p/6e2b68a93c88</a></p><blockquote><p>在移动端上，在你用overflow-y:scorll属性的时候，你会发现滚动的效果很木，很慢</p></blockquote><p><code>-webkit-overflow-scrolling:touch</code></p><p><a href="https://www.cnblogs.com/xiahj/p/8036419.html" target="_blank" rel="noreferrer">https://www.cnblogs.com/xiahj/p/8036419.html</a></p><blockquote><p>如何解决长时间按住页面出现闪退</p></blockquote><p><code>-webkit-touch-callout: none;</code></p><blockquote><p>触摸元素时出现半透明灰色这招</p></blockquote><p><code>-webkit-tap-highlight-color: rgba(255,255,255,0)</code></p>`,47)]))}const E=i(l,[["render",n]]);export{c as __pageData,E as default};
