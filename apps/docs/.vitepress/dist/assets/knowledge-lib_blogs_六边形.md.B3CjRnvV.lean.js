import{a2 as i,t as a,aq as e,q as r}from"./chunks/framework.jAttmLhR.js";const p=JSON.parse('{"title":"成为一名六边形现代前端","description":"","frontmatter":{},"headers":[],"relativePath":"knowledge-lib/blogs/六边形.md","filePath":"knowledge-lib/blogs/六边形.md"}'),t={name:"knowledge-lib/blogs/六边形.md"};function u(o,l,s,n,h,c){return r(),a("div",null,l[0]||(l[0]=[e('<h1 id="成为一名六边形现代前端" tabindex="-1">成为一名六边形现代前端 <a class="header-anchor" href="#成为一名六边形现代前端" aria-label="Permalink to &quot;成为一名六边形现代前端&quot;">​</a></h1><p><strong>目标</strong></p><blockquote><p>用rust实现一个js引擎</p></blockquote><p><a href="https://front-talk.com/video" target="_blank" rel="noreferrer">现代前端开发必知系列</a></p><h2 id="计算机网络" tabindex="-1">计算机网络 <a class="header-anchor" href="#计算机网络" aria-label="Permalink to &quot;计算机网络&quot;">​</a></h2><blockquote><p>使用nslookup工具查看实际使用的CDN</p></blockquote><p>内容分发网络 CDN? 当全球不同地区的用户从不同的CDN节点下载数据时，DNS会根据地区返回不同的CNAME域名（CDN加速域名）</p><ul><li>DNS只是用于域名查询吗</li><li>如何为网站绑定一个域名</li><li>为什么首次打开网站比较慢</li><li>CDN是如何利用DNS加速静态资源的</li></ul><p>通过修改本地hosts方式来给本地项目配置一个伪域名，有效解决本地开发跨域导致cookie无法传输的问题</p><h2 id="编程语言" tabindex="-1">编程语言 <a class="header-anchor" href="#编程语言" aria-label="Permalink to &quot;编程语言&quot;">​</a></h2><ul><li>js和ecma script规范</li><li>typescript</li><li>基于rust的前端基建</li><li>webassembly (WASM)</li><li>领域特定语言（DSL）: jsx\\template</li><li>js引擎和js运行时（node\\chrome）</li></ul><h2 id="前端工具链" tabindex="-1">前端工具链 <a class="header-anchor" href="#前端工具链" aria-label="Permalink to &quot;前端工具链&quot;">​</a></h2><p>构建工具组成：</p><ul><li>代码转义器（Transpiler/Compiler） <ul><li>将源代码转换为目标平台能够运行的代码同时兼容旧环境</li></ul></li><li>优化器 <ul><li>压缩、混淆、分割</li></ul></li><li>打包器（bundler） <ul><li>通常内置转义器和优化器，从源代码到最终产物一站式完成</li></ul></li><li>开发服务器 <ul><li>通过HMR、传输原生ES模块、接口代理等来提升开发体验</li></ul></li><li>插件系统 <ul><li>功能拓展</li><li>定制化需求</li></ul></li></ul><p>大趋势</p><ul><li>极致整合：将webpack内各种配置内置</li><li>使用rust重写核心模块：显著提升构建和打包效率</li></ul><p>调试工具：</p><ul><li>浏览器开发者工具</li><li>小程序开发者工具：用于小程序模拟和真机调试</li><li>接口调试：Postman\\Apifox</li><li>框架调试工具: React Developer 和 Vue Devtools等</li></ul><p>CI/CD：</p><ul><li>github actions</li><li>jenkins</li></ul><h2 id="用户界面-ui-user-interface" tabindex="-1">用户界面（UI, user interface） <a class="header-anchor" href="#用户界面-ui-user-interface" aria-label="Permalink to &quot;用户界面（UI, user interface）&quot;">​</a></h2><p>组件库：基础组件 模板组件 业务组件</p><h3 id="应用框架" tabindex="-1">应用框架 <a class="header-anchor" href="#应用框架" aria-label="Permalink to &quot;应用框架&quot;">​</a></h3><ul><li>React生态 <ul><li>nextjs</li><li>umijs</li><li>modernjs</li></ul></li><li>Vue生态 <ul><li>Nuxt</li><li>Quasar</li></ul></li><li>桌面应用 <ul><li>electron</li><li>tauri</li></ul></li><li>小程序 <ul><li>uniapp</li><li>taro</li></ul></li><li>移动原生应用 <ul><li>RN</li><li>Flutter</li></ul></li></ul><p>一般都要包含以下部分</p><ul><li>路由 Routing</li><li>样式 styling</li><li>数据获取 Data Fetching</li><li>测试 testing</li><li>插件 plugin</li><li>部署 deploying</li></ul><h3 id="应用架构" tabindex="-1">应用架构 <a class="header-anchor" href="#应用架构" aria-label="Permalink to &quot;应用架构&quot;">​</a></h3><ul><li>MPA 多页应用</li><li>SPA 单页应用</li><li>PWA 渐进式Web应用 <ul><li>service worker</li><li>离线缓存技术</li></ul></li><li>Micro Frontends 微前端</li><li>islands <ul><li>类似为前端</li><li>组件细粒度拆分</li></ul></li></ul><h1 id="用户体验" tabindex="-1">用户体验 <a class="header-anchor" href="#用户体验" aria-label="Permalink to &quot;用户体验&quot;">​</a></h1><h2 id="性能问题" tabindex="-1">性能问题 <a class="header-anchor" href="#性能问题" aria-label="Permalink to &quot;性能问题&quot;">​</a></h2><ul><li>页面加载事件过长 <ul><li>资源体积过大 <ul><li>减小产物大小 <ul><li>压缩</li><li>tree shaking</li><li>依赖外置</li></ul></li><li>减小传输量 <ul><li>代码拆分 code spliting</li><li>按需加载 lazy loading</li></ul></li><li>其它： <ul><li>服务端渲染</li><li>流式渲染</li><li>静态生成</li></ul></li></ul></li><li>网络延迟高 <ul><li>http2</li><li>CDN</li><li>边缘计算</li><li>浏览器资源提示：preload\\prefetch\\dns-prefetch\\preconnect...</li><li>图片优化：webp\\预渲染缩略图</li></ul></li><li>缺少缓存 <ul><li>本地缓存 <ul><li>http缓存头</li><li>web storage api手动管理缓存</li><li>service worker cache api</li></ul></li><li>远端缓存 <ul><li>内存缓存</li><li>边缘缓存</li><li>网关缓存</li></ul></li></ul></li><li>渲染受阻 <ul><li>js: async\\defer</li><li>web worker \\ webassembly 将耗时任务分离</li><li>对于spa可在主文档预先写入数据</li></ul></li></ul></li><li>交互过程不流畅 <ul><li>海量数据： <ul><li>长列表：分页、虚拟滚动</li><li>大数据可视化：数据抽样、分片渲染、canvas渲染、webgl加速</li><li>离屏渲染，在不见位置渲染，结束后一次性展示</li></ul></li><li>大量动画 <ul><li>使用硬件加速的css属性：transform、opacity、perspective、filter等</li><li>requestAnimationFrame</li><li>开源动画方案: Lottie, FrameMotion</li></ul></li><li>频繁交互 <ul><li>js: 防抖节流</li><li>框架：v-show keep-alive /</li></ul></li></ul></li><li>资源消耗过度 <ul><li>不合理的资源加载</li><li>代码质量问题</li><li>之间听不卸载的事件处理器</li><li>频繁的网络请求</li><li>。。。</li></ul></li></ul><h2 id="ui设计" tabindex="-1">UI设计 <a class="header-anchor" href="#ui设计" aria-label="Permalink to &quot;UI设计&quot;">​</a></h2><ul><li>加载反馈：loading 骨架</li><li>错误反馈</li><li>响应式设计</li></ul><p>可访问性：</p><ul><li>多语言支持： vue-il8n react-i18n</li></ul><p>个性化：</p><ul><li>主题设置</li><li>记忆：利用本地存储优化交互</li><li>AB测试，针对用户进行个性化优化</li></ul><h1 id="服务端" tabindex="-1">服务端 <a class="header-anchor" href="#服务端" aria-label="Permalink to &quot;服务端&quot;">​</a></h1><h2 id="运行时" tabindex="-1">运行时 <a class="header-anchor" href="#运行时" aria-label="Permalink to &quot;运行时&quot;">​</a></h2><p>js引擎 + js标准库 + 一套api</p><p>如：nodejs\\deno\\bun</p><h2 id="基础框架" tabindex="-1">基础框架 <a class="header-anchor" href="#基础框架" aria-label="Permalink to &quot;基础框架&quot;">​</a></h2><p>express koa fastify</p><h2 id="应用框架-1" tabindex="-1">应用框架 <a class="header-anchor" href="#应用框架-1" aria-label="Permalink to &quot;应用框架&quot;">​</a></h2><p>nestjs eggjs</p><h2 id="应用架构-1" tabindex="-1">应用架构 <a class="header-anchor" href="#应用架构-1" aria-label="Permalink to &quot;应用架构&quot;">​</a></h2><p>MVC: 模型 视图 控制器 RESTful: 以资源和动作为核心、语义化 BFF: 面向前端的中夹层</p><h1 id="质量安全" tabindex="-1">质量安全 <a class="header-anchor" href="#质量安全" aria-label="Permalink to &quot;质量安全&quot;">​</a></h1><h2 id="编码质量" tabindex="-1">编码质量 <a class="header-anchor" href="#编码质量" aria-label="Permalink to &quot;编码质量&quot;">​</a></h2><ul><li>防御性编程</li><li>质量管理工具：eslint静态检查 prettier风格控制</li><li>代码评审：代码设计问题</li><li>测试： <ul><li>单元测试：通常对实现某一功能的函数进行测试 <ul><li>jest\\mocha</li></ul></li><li>集成测试：模块间测试 <ul><li>playwright</li></ul></li><li>兼容性测试 <ul><li>特性探针 Modernizr 验证生产环境中某个特性是否可用，配合前端监控日志提前发现问题</li></ul></li><li>UI测试： <ul><li>VueTestUtils</li><li>ReactTestingLibrary</li></ul></li></ul></li></ul><h2 id="前端攻防" tabindex="-1">前端攻防 <a class="header-anchor" href="#前端攻防" aria-label="Permalink to &quot;前端攻防&quot;">​</a></h2><p>xss: sanitizeHtml对用户输入进行过滤</p><p>csrf</p><h2 id="稳定性" tabindex="-1">稳定性 <a class="header-anchor" href="#稳定性" aria-label="Permalink to &quot;稳定性&quot;">​</a></h2><h1 id="ci-cd" tabindex="-1">CI/CD <a class="header-anchor" href="#ci-cd" aria-label="Permalink to &quot;CI/CD&quot;">​</a></h1><h1 id="云基础设施加速前端" tabindex="-1">云基础设施加速前端 <a class="header-anchor" href="#云基础设施加速前端" aria-label="Permalink to &quot;云基础设施加速前端&quot;">​</a></h1><ul><li>网络服务</li><li>计算服务：serverless</li><li>存储服务：对象存储OSS\\CDN <ul><li>CDN加速就是将构建产物上传oss再通过cdn分发</li><li>图片处理：自动压缩、格式转换、添加水印</li><li>kv存储服务，不再需要配置后台</li></ul></li><li>安全服务</li></ul><h1 id="可观测性" tabindex="-1">可观测性 <a class="header-anchor" href="#可观测性" aria-label="Permalink to &quot;可观测性&quot;">​</a></h1><p>sentry</p><p>日志：前端监控手机异常信息、埋点收集用户信息</p><p>追踪: 生成和传递一个trace ID,</p><p>度量：访问量、留存率、用户体验...</p>',62)]))}const b=i(t,[["render",u]]);export{p as __pageData,b as default};
