import{a2 as t,t as o,aq as a,q as l}from"./chunks/framework.jAttmLhR.js";const u=JSON.parse('{"title":"事件循环EventLoop","description":"","frontmatter":{},"headers":[],"relativePath":"knowledge-lib/js/js机制/eventLoop/index.md","filePath":"knowledge-lib/js/js机制/eventLoop/index.md"}'),s={name:"knowledge-lib/js/js机制/eventLoop/index.md"};function i(n,e,r,p,d,c){return l(),o("div",null,e[0]||(e[0]=[a('<h1 id="事件循环eventloop" tabindex="-1">事件循环EventLoop <a class="header-anchor" href="#事件循环eventloop" aria-label="Permalink to &quot;事件循环EventLoop&quot;">​</a></h1><blockquote><p>js是一个单线程同步执行的语言</p><p>异步：某些函数不会立即执行，需要等到某个时机才会执行，叫异步函数</p></blockquote><p>浏览器的线程：</p><ul><li>js执行引擎：负责执行js代码</li><li>渲染线程：负责渲染页面</li><li>计时器线程</li><li>事件监听线程：负责监听事件</li><li>http网络线程：负责网络线程</li></ul><p><a href="https://segmentfault.com/a/1190000016278115" target="_blank" rel="noreferrer">带你彻底弄懂Event Loop</a></p><blockquote><p>宏任务和微任务都有哪些</p></blockquote><p>宏任务：script、setTimeOut、setInterval、setImmediate</p><p>微任务:promise.then,process.nextTick、Object.observe、MutationObserver</p><p>注意：Promise 是同步任务</p><h2 id="面试题" tabindex="-1"><a href="/knowledge-lib/js/jsAPI/promiseA/">面试题</a> <a class="header-anchor" href="#面试题" aria-label="Permalink to &quot;[面试题](/knowledge-lib/js/jsAPI/promiseA/)&quot;">​</a></h2>',10)]))}const b=t(s,[["render",i]]);export{u as __pageData,b as default};
