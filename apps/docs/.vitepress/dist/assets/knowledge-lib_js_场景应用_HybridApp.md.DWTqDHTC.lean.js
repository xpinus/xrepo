import{a2 as a,t as i,aq as p,q as r}from"./chunks/framework.jAttmLhR.js";const A=JSON.parse('{"title":"移动端开发必备知识-Hybrid App","description":"","frontmatter":{},"headers":[],"relativePath":"knowledge-lib/js/场景应用/HybridApp.md","filePath":"knowledge-lib/js/场景应用/HybridApp.md"}'),t={name:"knowledge-lib/js/场景应用/HybridApp.md"};function d(l,e,n,o,s,h){return r(),i("div",null,e[0]||(e[0]=[p('<h1 id="移动端开发必备知识-hybrid-app" tabindex="-1">移动端开发必备知识-Hybrid App <a class="header-anchor" href="#移动端开发必备知识-hybrid-app" aria-label="Permalink to &quot;移动端开发必备知识-Hybrid App&quot;">​</a></h1><p><a href="https://juejin.cn/post/7062967241268019214" target="_blank" rel="noreferrer">https://juejin.cn/post/7062967241268019214</a></p><p>App目前主要分为三类，分为:</p><ul><li>Web App: 移动端网站</li><li>Native App：原生App啦，分为Android开发和IOS开发</li><li>Hybrid App：将 APP 的一部分需要动态变动的内容通过 H5 来实现，通过原生的网页加载控件 WebView (Android)或 WKWebView（iOS）来加载H5页面</li></ul><h2 id="app和h5通信" tabindex="-1">App和H5通信 <a class="header-anchor" href="#app和h5通信" aria-label="Permalink to &quot;App和H5通信&quot;">​</a></h2><h3 id="h5端调用app端方法" tabindex="-1">H5端调用App端方法 <a class="header-anchor" href="#h5端调用app端方法" aria-label="Permalink to &quot;H5端调用App端方法&quot;">​</a></h3><ul><li>H5端调用Android端方法使用window.androidJSBridge.方法名(参数)，这里的androidJSBridge名称不固定可自定义。而H5端调用IOS端方法固定写法为window.webkit.messageHandlers.方法名.postMessage(参数)</li><li>H5端调用Android端方法传递的参数只能是基本数据类型，如果需要传递引用数据类型需要使用JSON.stringfy()处理。而IOS端既可以传递基本数据类型也可以传递引用数据类型。</li><li>H5端调用Android端方法可以直接有返回值。而IOS端不能直接有返回值。</li></ul>',7)]))}const c=a(t,[["render",d]]);export{A as __pageData,c as default};
