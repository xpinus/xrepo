import{a2 as o,t as r,aq as n,q as a}from"./chunks/framework.jAttmLhR.js";const d=JSON.parse('{"title":"Monorepo","description":"","frontmatter":{},"headers":[],"relativePath":"knowledge-lib/engineering/开发/monorepo.md","filePath":"knowledge-lib/engineering/开发/monorepo.md"}'),l={name:"knowledge-lib/engineering/开发/monorepo.md"};function p(t,e,i,s,m,c){return a(),r("div",null,e[0]||(e[0]=[n('<h1 id="monorepo" tabindex="-1">Monorepo <a class="header-anchor" href="#monorepo" aria-label="Permalink to &quot;Monorepo&quot;">​</a></h1><blockquote><p>Monorepo 是一种项目代码管理方式，指单个仓库中管理多个项目，有助于简化代码共享、版本控制、构建和部署等方面的复杂性，并提供更好的可重用性和协作性</p></blockquote><blockquote><p>过往传统架构的问题？</p><ul><li>多个项目独立，分属不同的仓库</li><li>技术栈独立</li><li>规范化，自动化配置等割裂</li><li>依赖管理，版本很难统一管理，项目之间的依赖，不好管理</li><li>部署也不好统一管理</li></ul></blockquote><h2 id="pnpm-npm-yarn" tabindex="-1">pnpm/npm/yarn <a class="header-anchor" href="#pnpm-npm-yarn" aria-label="Permalink to &quot;pnpm/npm/yarn&quot;">​</a></h2><p><strong>npm和yarn可能存在的问题</strong></p><ul><li>幽灵依赖：存在依赖提升，某个项目使用的依赖，并没有在其 package.json 中声明，也可以直接使用</li><li>依赖冗余</li></ul><h2 id="turborepo" tabindex="-1">turborepo <a class="header-anchor" href="#turborepo" aria-label="Permalink to &quot;turborepo&quot;">​</a></h2><blockquote><p>Vercel 团队开源的高性能构建代码仓库系统，允许开发者使用不同的构建系统</p></blockquote><blockquote><p>turborepo: 简单，非侵入式，npm下载量早就超过了lerna(缺少维护，使用复杂)、nx</p></blockquote><ul><li>构建任务并行进行，构建顺序交给开发者配置</li><li>通过缓存，减少构建时间</li><li>支持任务编排</li></ul><p><a href="https://ksh7.com/posts/pnpm-use-workspace/index.html#pnpm-workspace-yaml" target="_blank" rel="noreferrer">https://ksh7.com/posts/pnpm-use-workspace/index.html#pnpm-workspace-yaml</a></p>',11)]))}const h=o(l,[["render",p]]);export{d as __pageData,h as default};
