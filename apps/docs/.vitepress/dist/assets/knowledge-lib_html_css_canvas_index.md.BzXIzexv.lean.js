import{a2 as a,t as n,aq as t,q as s}from"./chunks/framework.jAttmLhR.js";const v=JSON.parse('{"title":"Canvas","description":"","frontmatter":{},"headers":[],"relativePath":"knowledge-lib/html&css/canvas/index.md","filePath":"knowledge-lib/html&css/canvas/index.md"}'),i={name:"knowledge-lib/html&css/canvas/index.md"};function r(l,e,c,p,o,d){return s(),n("div",null,e[0]||(e[0]=[t('<h1 id="canvas" tabindex="-1">Canvas <a class="header-anchor" href="#canvas" aria-label="Permalink to &quot;Canvas&quot;">​</a></h1><p>-<code>Canvas</code>：通过<code>js</code>绘制的2D图像，逐像素渲染，一旦绘制完成就是一张图</p><ul><li>依赖分辨率</li><li>不支持事件处理</li><li>弱的文本渲染能力</li><li>能够以<code>png</code>或<code>jpg</code>格式保存结果图像</li><li>最适合图像密集型游戏，其中许多对象会频繁重绘</li></ul><p><a href="https://juejin.cn/post/6982764325119393805" target="_blank" rel="noreferrer">入门</a></p><p>WebGL（全写 Web Graphics Library ）是一种 3D 绘图标准，这种绘图技术标准允许把 JavaScript 和 OpenGL ES 2.0 结合在一起，通过增加 OpenGL ES 2.0 的一个 JavaScript 绑定， WebGL 可以为 HTML5 Canvas 提供硬件 3D 加速渲染，这样 Web 开发人员就可以借助系统显卡来在浏览器里更流畅地展示 3D 场景和模型了，还能创建复杂的导航和数据视觉化。显然， WebGL 技术标准免去了开发网页专用渲染插件的麻烦，可被用于创建具有复杂 3D 结构的网站页面，甚至可以用来设计 3D 网页游戏等等。</p><p>WebGL完美地解决了现有的 Web 交互式三维动画的两个问题：</p><p>第一，它通过HTML脚本本身实现 Web 交互式三维动画的制作，无需任何浏览器插件支持 ;</p><p>第二，它利用底层的图形硬件加速功能进行的图形渲染，是通过统一的、标准的、跨平台的OpenGL接口实现的。</p><p>通俗说WebGL中 canvas 绘图中的 3D 版本。因为原生的 WebGL 很复杂，我们经常会使用一些三方的库，如 three.js 等，这些库多数用于 HTML5 游戏开发。</p>',9)]))}const h=a(i,[["render",r]]);export{v as __pageData,h as default};
