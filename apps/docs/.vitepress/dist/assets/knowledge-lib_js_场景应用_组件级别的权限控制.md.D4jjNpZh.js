import{a2 as a,t as i,aq as t,q as l}from"./chunks/framework.jAttmLhR.js";const c=JSON.parse('{"title":"组件级权限控制","description":"","frontmatter":{},"headers":[],"relativePath":"knowledge-lib/js/场景应用/组件级别的权限控制.md","filePath":"knowledge-lib/js/场景应用/组件级别的权限控制.md"}'),e={name:"knowledge-lib/js/场景应用/组件级别的权限控制.md"};function n(p,s,o,r,h,d){return l(),i("div",null,s[0]||(s[0]=[t(`<h1 id="组件级权限控制" tabindex="-1">组件级权限控制 <a class="header-anchor" href="#组件级权限控制" aria-label="Permalink to &quot;组件级权限控制&quot;">​</a></h1><ul><li>页面级： 动态路由，对页面代码没有侵入性</li><li>组件级</li><li>代码级/函数级</li></ul><ol><li>权限插槽组件：</li></ol><p>自定义一个组件，将需要权限控制的组件放入插槽</p><p>也可以通过具名插槽，控制更加复杂的UI状态变化</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Authority</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;template #default=&quot;{ userPermission }&quot;&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;a-buttion :disabled=&quot;!userPermission.includes(&#39;sys:user:create&#39;)&quot;&gt;新增&lt;/a-buttion&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/template&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Authority</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><blockquote><p>? 前端目前用的casl，后端用的rbac</p></blockquote><ol start="2"><li>自定义指令</li></ol>`,8)]))}const u=a(e,[["render",n]]);export{c as __pageData,u as default};
