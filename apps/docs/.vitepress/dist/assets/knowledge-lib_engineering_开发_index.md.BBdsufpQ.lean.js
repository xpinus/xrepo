import{a2 as s,t as a,aq as l,q as t}from"./chunks/framework.jAttmLhR.js";const E=JSON.parse('{"title":"前端开发规范","description":"","frontmatter":{},"headers":[],"relativePath":"knowledge-lib/engineering/开发/index.md","filePath":"knowledge-lib/engineering/开发/index.md"}'),e={name:"knowledge-lib/engineering/开发/index.md"};function n(h,i,p,k,r,d){return t(),a("div",null,i[0]||(i[0]=[l(`<h1 id="前端开发规范" tabindex="-1">前端开发规范 <a class="header-anchor" href="#前端开发规范" aria-label="Permalink to &quot;前端开发规范&quot;">​</a></h1><h2 id="编程规范" tabindex="-1">编程规范 <a class="header-anchor" href="#编程规范" aria-label="Permalink to &quot;编程规范&quot;">​</a></h2><h3 id="命名规范" tabindex="-1">命名规范 <a class="header-anchor" href="#命名规范" aria-label="Permalink to &quot;命名规范&quot;">​</a></h3><ul><li>项目命名：全部采用小写方式， 以中划线分隔单词</li></ul><blockquote><p>✅ fronted-project</p></blockquote><blockquote><p>❌ frontedProject / fronted_project</p></blockquote><ul><li>目录命名：全部采用小写方式， 以中划线分隔，有复数结构时，要采用复数命名法， 缩写不用复数</li></ul><blockquote><p>✅ scripts / styles / components / images / utils / layouts / img / doc</p></blockquote><blockquote><p>❌ script / style / imgs / docs</p></blockquote><ul><li>文件命名： 全部采用小写方式， 以中划线分隔</li></ul><blockquote><p>✅ render-dom.js / user-management.html</p></blockquote><blockquote><p>❌ renderDom.js / UserManagement.html</p></blockquote><ul><li>其他</li></ul><blockquote><p>❌ 严禁使用拼音与英文混合的方式，除特殊词义，不推荐使用拼音</p></blockquote><blockquote><p>❌ 严禁使用拼音与英文混合的方式，除特殊词义，不推荐使用拼音</p></blockquote><h3 id="html规范" tabindex="-1">HTML规范 <a class="header-anchor" href="#html规范" aria-label="Permalink to &quot;HTML规范&quot;">​</a></h3><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;!</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">DOCTYPE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">head</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> http-equiv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;X-UA-Compatible&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;IE=Edge&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> charset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;UTF-8&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Page title&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">link</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;style.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">head</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;images/company-logo.png&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> alt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Company&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;demo.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="css规范" tabindex="-1">CSS规范 <a class="header-anchor" href="#css规范" aria-label="Permalink to &quot;CSS规范&quot;">​</a></h3><blockquote><p><a href="https://juejin.cn/post/6844904104792162312?from=search-suggest" target="_blank" rel="noreferrer">BEM规范以及用法</a></p></blockquote><p>类名由三部分组成：块（block）、元素（element）、修饰符（modifier）</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  .form</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  .form--theme-xmas</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  .form--simple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  .form__input</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  .form__submit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  .form__submit--disabled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- 对应的HTML结构如下：--&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">form</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;form form--theme-xmas form--simple&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">input</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;form__input&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">input</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;form__submit form__submit--disabled&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;submit&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">form</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>⚠ 对于less/sass要避免嵌套层级过多：将嵌套深度限制在3级。对于超过4级的嵌套，给予重新评估</p><p>⚠ 避免使用ID选择器及全局标签选择器，防止污染全局样式</p><h3 id="js规范" tabindex="-1">js规范 <a class="header-anchor" href="#js规范" aria-label="Permalink to &quot;js规范&quot;">​</a></h3><blockquote><p>项目中应使用eslint+prettier 实现代码风格统一、语法检查、代码美化</p></blockquote><ul><li>命名 <ul><li>方法名、参数名、成员变量、局部变量都统一使用 lowerCamelCase 风格，必须遵从驼峰形式</li><li>方法命名必须是 动词 或者 动词+名词 形式，确保语义化，应该始终是多个单词组成（≥ 2）</li><li>全局常量命名采用全大写，单词间用下划线连接，力求语义表达完整清楚，不要嫌名字长</li><li>👍 推荐用词 <ul><li>增/删/改/查/详情：add / delete / update / get / detail</li><li>get 获取 / set 设置</li><li>add 增加 / remove 删除</li><li>create 创建 / destory 移除</li><li>start 启动 / stop 停止</li><li>open 打开 / close 关闭</li><li>read 读取 / write 写入</li><li>load 载入 / save 保存</li><li>create 创建 / destroy 销毁</li><li>begin 开始 / end 结束</li><li>backup 备份 / restore 恢复</li><li>import 导入 / export 导出</li><li>split 分割 / merge 合并</li><li>inject 注入 / extract 提取</li><li>attach 附着 / detach 脱离</li><li>bind 绑定 / unbind 分离</li><li>view 查看 / browse 浏览</li><li>edit 编辑 / modify 修改</li><li>select 选取 / mark 标记</li><li>copy 复制 / paste 粘贴</li><li>undo 撤销 / redo 重做</li><li>insert 插入 / delete 移除</li><li>add 加入 / append 添加</li><li>clean 清理 / clear 清除</li><li>index 索引 / sort 排序</li><li>find 查找 / search 搜索</li><li>increase 增加 / decrease 减少</li><li>play 播放 / pause 暂停</li><li>launch 启动 / run 运行</li><li>compile 编译 / execute 执行</li><li>debug 调试 / trace 跟踪</li><li>observe 观察 / listen 监听</li><li>build 构建 / publish 发布</li><li>input 输入 / output 输出</li><li>encode 编码 / decode 解码</li><li>encrypt 加密 / decrypt 解密</li><li>compress 压缩 / decompress 解压缩</li><li>pack 打包 / unpack 解包</li><li>parse 解析 / emit 生成</li><li>connect 连接 / disconnect 断开</li><li>send 发送 / receive 接收</li><li>download 下载 /upload 上传</li><li>refresh 刷新 / synchronize 同步</li><li>update 更新 / revert 复原</li><li>lock 锁定 / unlock 解锁</li><li>check out 签出 / check in 签入</li><li>submit 提交 / commit 交付</li><li>push 推 / pull 拉</li><li>expand 展开 / collapse 折叠</li><li>begin 起始 / end 结束</li><li>start 开始 / finish 完成</li><li>enter 进入 / exit 退出</li><li>abort 放弃 / quit 离开</li><li>obsolete 废弃 / depreciate 废旧</li><li>collect 收集 / aggregate 聚集</li></ul></li></ul></li></ul><blockquote><p>✅ render-dom.js / user-management.html</p></blockquote><blockquote><p>❌ renderDom.js / UserManagement.html</p></blockquote><ul><li>使用 ES6+语法</li><li>禁用undefined判断：永远不要直接使用 undefined 进行变量判断；使用 typeof 和字符串’undefined’对变量进行判断</li><li>条件判断和循环最多三层： 如果超过 3 层请抽成函数，并写清楚注释</li><li>this的转换命名：对上下文 this 的引用只能使用’that’来命名</li><li>注释：<a href="https://juejin.cn/post/7220244993789214757#heading-5" target="_blank" rel="noreferrer">JSDocs：快速入门指南</a></li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * Adds two numbers together and returns the result.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {number}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> value1</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> - The first value</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {number}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> value2</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> - The second value</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@returns</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {string}</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> The values that have been added together</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@example</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * const a = 10;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * const b = 20;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * const result = addNumbers(a, b);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * console.log(result);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * // Logs: 30</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> addNumbers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">value1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">value2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> value1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> value2;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="vue规范" tabindex="-1">Vue规范 <a class="header-anchor" href="#vue规范" aria-label="Permalink to &quot;Vue规范&quot;">​</a></h2><p>先阅读<a href="https://cn.vuejs.org/style-guide/" target="_blank" rel="noreferrer">官方风格指导</a></p><ul><li>组件名应该为多个单词 <ul><li>基础组件统一以Base开头，如：<code>BaseButton</code> / <code>BaseIcon</code></li><li>子组件应该以其父组件名开头，如：<code>TodoList</code> / <code>TodoListItem</code> / <code>TodoListItemButton</code></li><li>组件名应尽量保证一致的开头：<code>SearchButtonClear</code> / <code>SearchButtonRun</code> / <code>SearchInputQuery</code></li><li>Vue组件在使用时 <ul><li>在SFC、string templates、JSX中使用大驼峰自闭合的写法：<code>&lt;MyComponent/&gt;</code></li><li>在dom中使用短横线命名法：<code>&lt;my-component&gt;&lt;/my-component&gt;</code></li></ul></li><li>组件名始终不推荐出现缩写、拼音等</li></ul></li><li>Props <ul><li>定义时采用小驼峰命名</li><li>使用时使用短横线命名，保持风格一致</li></ul></li><li>避免在一个元素上同时使用v-for和v-if</li><li>使用component-scoped样式</li><li>template中不要出现js，采用computed替代</li><li>SFC 中的标签顺序统一为 <code>&lt;script&gt;</code>、<code>&lt;template&gt;</code>、<code>&lt;style&gt;</code></li><li>代码中禁止出现 this.$parent、this.$root 之类的访问祖先组件的代码，防止数据流混乱 <ul><li>使用prop和emit，或者全局store</li></ul></li></ul><h2 id="git规范" tabindex="-1">Git规范 <a class="header-anchor" href="#git规范" aria-label="Permalink to &quot;Git规范&quot;">​</a></h2><h3 id="commit规范" tabindex="-1">commit规范 <a class="header-anchor" href="#commit规范" aria-label="Permalink to &quot;commit规范&quot;">​</a></h3><blockquote><p>husky + lint-staged + commitlint + cz-customizable(commitizen) 实现git提交格式规范</p></blockquote><p><a href="https://www.conventionalcommits.org/zh-hans/v1.0.0/#%e7%ba%a6%e5%ae%9a%e5%bc%8f%e6%8f%90%e4%ba%a4%e8%a7%84%e8%8c%83" target="_blank" rel="noreferrer">约定式提交规范</a></p><p><a href="https://gitmoji.dev/" target="_blank" rel="noreferrer">gitmoji</a></p><blockquote><p><code>&lt;类型&gt;[范围]</code>: <code>&lt;标题&gt;[主题内容]</code></p></blockquote><ul><li>类型（必须)：用于说明git commit的类别，只允许使用下面的标识。 <ul><li>feat：新功能（feature）。</li><li>fix：修复bug，可以是QA发现的BUG，也可以是研发自己发现的BUG。</li><li>docs：文档（documentation）。</li><li>style：格式（不影响代码运行的变动）。</li><li>refactor：重构（即不是新增功能，也不是修改bug的代码变动）。</li><li>perf：优化相关，比如提升性能、体验。</li><li>test：增加测试。</li><li>chore：构建过程或辅助工具的变动。</li><li>revert：回滚到上一个版本。</li><li>merge：代码合并。</li></ul></li><li>范围(可选)：用于说明 commit 影响的范围，例如项目包含多模块，admin、interface、task、job等 多个以|分割</li><li>标题(必须)：标题是commit目的的简短描述。</li><li>主体内容(可选)：用新的空行将“标题”和“主体内容”隔开，Git 会自动识别第一行为摘要。主体内容是commit目的的详细描述，可以放一些备注、说明等</li></ul><h2 id="提高代码的可维护性和可扩展性" tabindex="-1">提高代码的可维护性和可扩展性 <a class="header-anchor" href="#提高代码的可维护性和可扩展性" aria-label="Permalink to &quot;提高代码的可维护性和可扩展性&quot;">​</a></h2><ul><li>遵循合适设计原则和模式：单一职责、开闭原则、依赖倒置原则等，是代码更加清晰可维护</li><li>模块化开发</li><li>遵循一致的开发规范，见上文</li><li>单元测试和自动化测试</li><li>持续集成和部署</li></ul>`,42)]))}const c=s(e,[["render",n]]);export{E as __pageData,c as default};
