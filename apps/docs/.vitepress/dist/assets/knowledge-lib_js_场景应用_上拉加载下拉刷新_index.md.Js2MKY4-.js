import{a2 as e,t as l,ao as i,q as t}from"./chunks/framework.tQiMsDJj.js";const u=JSON.parse('{"title":"无限滚动","description":"","frontmatter":{},"headers":[],"relativePath":"knowledge-lib/js/场景应用/上拉加载下拉刷新/index.md","filePath":"knowledge-lib/js/场景应用/上拉加载下拉刷新/index.md"}'),o={name:"knowledge-lib/js/场景应用/上拉加载下拉刷新/index.md"};function r(n,a,d,s,c,h){return t(),l("div",null,a[0]||(a[0]=[i('<h1 id="无限滚动" tabindex="-1">无限滚动 <a class="header-anchor" href="#无限滚动" aria-label="Permalink to &quot;无限滚动&quot;">​</a></h1><blockquote><p>场景：常见于移动端列表上拉加载下拉刷新实现</p></blockquote><p>在移动端长列表，提升性能，体验时</p><h2 id="上拉加载-无限滚动" tabindex="-1">上拉加载（无限滚动） <a class="header-anchor" href="#上拉加载-无限滚动" aria-label="Permalink to &quot;上拉加载（无限滚动）&quot;">​</a></h2><p>1.滚动事件监听 2.判断当前是否到达底部 3.触发回调加载数据</p><h2 id="下拉刷新" tabindex="-1">下拉刷新 <a class="header-anchor" href="#下拉刷新" aria-label="Permalink to &quot;下拉刷新&quot;">​</a></h2><ol><li>监听触摸事件</li><li>显示刷新的指示器，显示有没有达到阈值</li><li>触发刷新操作</li></ol><h2 id="考虑的点" tabindex="-1">考虑的点 <a class="header-anchor" href="#考虑的点" aria-label="Permalink to &quot;考虑的点&quot;">​</a></h2><ul><li>性能优化：节流防抖</li><li>懒加载</li><li>用户体验，视觉反馈</li><li>平滑动画</li><li>错误处理</li></ul><p>兼容性：</p><ul><li>触摸事件</li><li>css hack</li></ul>',11)]))}const b=e(o,[["render",r]]);export{u as __pageData,b as default};
